{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://get.aiware.com/schemas/v2/contracts.json",
  "title": "CapabilityContracts",
  "description": "Defines the contracts for various engine capabilities and objects",
  "definitions": {
    "capabilityAnomaly": {
      "$comment": "Capability Anomaly: there must be an 'object' or 'series' and all objects must be of type 'anomaly'",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "anomaly"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "$comment": "All objects must be of type 'anomaly'",
            "required": [
              "object"
            ],
            "properties": {
              "object": {
                "type": "array",
                "items": {
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "const": "anomaly"
                    }
                  }
                }
              }
            }
          },
          {
            "$comment": "All series may only contain objects of type 'anomaly'",
            "required": [
              "series"
            ],
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "required": [
                    "object"
                  ],
                  "properties": {
                    "object": {
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "const": "anomaly"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "capabilityConcept": {
      "$comment": "Capability Concept: must only contain 'object's of type 'concept'",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "concept"
            }
          }
        }
      },
      "then": {
        "$comment": "must contain 'object' property",
        "required": [
          "object"
        ],
        "properties": {
          "object": {
            "type": "array",
            "items": {
              "required": [
                "type"
              ],
              "$comment": "every object must be of type 'concept'",
              "properties": {
                "type": {
                  "const": "concept"
                }
              }
            }
          }
        }
      }
    },
    "capabilityEntity": {
      "$comment": "Capability Entity: must only contain 'object's of type 'namedEntity' with a 'label' or 'entityId' property",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "entity"
            }
          }
        }
      },
      "then": {
        "required": [
          "object"
        ],
        "properties": {
          "object": {
            "type": "array",
            "items": {
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "const": "namedEntity"
                }
              },
              "anyOf": [
                {
                  "required": [
                    "label"
                  ]
                },
                {
                  "required": [
                    "entityId"
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "capabilityKeyword": {
      "$comment": "Capability Keyword: must only contain 'object's of type 'keyword' with a 'label' property",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "keyword"
            }
          }
        }
      },
      "then": {
        "required": [
          "object"
        ],
        "properties": {
          "object": {
            "type": "array",
            "items": {
              "required": [
                "type",
                "label"
              ],
              "properties": {
                "type": {
                  "const": "keyword"
                }
              }
            }
          }
        }
      }
    },
    "capabilityLanguage": {
      "$comment": "Capability Language: the root object must contain a 'language' property",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "language"
            }
          }
        }
      },
      "then": {
        "required": [
          "language"
        ]
      }
    },
    "capabilityMediaTranslated": {
      "$comment": "Capability Media Translated: must contain 'media' property with 'language' in each item",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "media-translated"
            }
          }
        }
      },
      "then": {
        "required": [
          "media"
        ],
        "properties": {
          "media": {
            "type": "array",
            "items": {
              "required": [
                "language"
              ]
            }
          }
        }
      }
    },
    "capabilityObject": {
      "$comment": "Capability Object: must contain 'object' or 'series' property with items of type 'object'",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "object"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "$comment": "All objects must be of type 'object'",
            "required": [
              "object"
            ],
            "properties": {
              "object": {
                "type": "array",
                "items": {
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "const": "object"
                    }
                  }
                }
              }
            }
          },
          {
            "$comment": "All series must only contain objects of type 'object'",
            "required": [
              "series"
            ],
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "required": [
                    "object"
                  ],
                  "properties": {
                    "object": {
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "type": {
                          "const": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "capabilitySentiment": {
      "$comment": "Capability Sentiment: must contain 'sentiment' or 'emotions' property at the root or in all 'object's",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "sentiment"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "required": [
              "sentiment"
            ]
          },
          {
            "required": [
              "emotions"
            ]
          },
          {
            "required": [
              "object"
            ],
            "properties": {
              "object": {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "required": [
                        "sentiment"
                      ]
                    },
                    {
                      "required": [
                        "emotions"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ]
      }
    },
    "capabilitySummary": {
      "$comment": "Capability Summary: the root object must contain a 'summary' property",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "summary"
            }
          }
        }
      },
      "then": {
        "required": [
          "summary"
        ]
      }
    },
    "capabilityText": {
      "$comment": "Capability Text: must contain 'object' or 'series' property with items of type 'text' and containing a 'text' property",
      "if": {
        "required": [
          "validationContracts"
        ],
        "properties": {
          "validationContracts": {
            "contains": {
              "const": "text"
            }
          }
        }
      },
      "then": {
        "anyOf": [
          {
            "$comment": "All objects must be of type 'text' and contain a 'text' property",
            "required": [
              "object"
            ],
            "properties": {
              "object": {
                "type": "array",
                "items": {
                  "required": [
                    "type",
                    "text"
                  ],
                  "properties": {
                    "type": {
                      "const": "text"
                    }
                  }
                }
              }
            }
          },
          {
            "$comment": "All series must only contain objects of type 'text' with a 'text' property",
            "required": [
              "series"
            ],
            "properties": {
              "series": {
                "type": "array",
                "items": {
                  "required": [
                    "object"
                  ],
                  "properties": {
                    "object": {
                      "required": [
                        "type",
                        "text"
                      ],
                      "properties": {
                        "type": {
                          "const": "text"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "objectLicensePlate": {
      "$comment": "Object of type 'licensePlate' MUST include licensePlate property, MAY include label, boundingPoly",
      "if": {
        "properties": {
          "type": {
            "const": "licensePlate"
          }
        }
      },
      "then": {
        "properties": {
          "type": {},
          "licensePlate": {},
          "label": {},
          "boundingPoly": {}
        },
        "required": [
          "type",
          "licensePlate"
        ],
        "additionalProperties": false
      }
    },
    "objectMotorVehicle": {
      "$comment": "Object of type 'motorVehicle' MUST include motorVehicle property, MAY include label, boundingPoly",
      "if": {
        "properties": {
          "type": {
            "const": "motorVehicle"
          }
        }
      },
      "then": {
        "properties": {
          "type": {},
          "motorVehicle": {},
          "label": {},
          "boundingPoly": {}
        },
        "required": [
          "type",
          "motorVehicle"
        ],
        "additionalProperties": false
      }
    }
  }
}